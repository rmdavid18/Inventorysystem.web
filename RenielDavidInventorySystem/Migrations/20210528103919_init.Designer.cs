// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RenielDavidInventorySystem.Infrastructure.Domain;

namespace RenielDavidInventorySystem.Migrations
{
    [DbContext(typeof(DefaultDbContext))]
    [Migration("20210528103919_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("RenielDavidInventorySystem.Infrastructure.Domain.Models.Category", b =>
                {
                    b.Property<Guid?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Tagline")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("RenielDavidInventorySystem.Infrastructure.Domain.Models.Product", b =>
                {
                    b.Property<Guid?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Brand")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Tagline")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = new Guid("6ffe01b3-4f05-421e-a35f-4dda3a7f0fe2"),
                            Brand = "Emperador",
                            CategoryId = new Guid("863317ad-ec02-47db-97cb-ad6cfe0e28d8"),
                            CreatedAt = new DateTime(2021, 5, 28, 10, 39, 18, 605, DateTimeKind.Utc).AddTicks(4164),
                            Description = "Lights",
                            Name = "Brandy",
                            Price = 0m,
                            Tagline = "PALASING",
                            UpdatedAt = new DateTime(2021, 5, 28, 10, 39, 18, 605, DateTimeKind.Utc).AddTicks(4165)
                        });
                });

            modelBuilder.Entity("RenielDavidInventorySystem.Infrastructure.Domain.Models.ProductTag", b =>
                {
                    b.Property<Guid?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("CategoryID")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("TagId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("TagId");

                    b.ToTable("ProductTags");
                });

            modelBuilder.Entity("RenielDavidInventorySystem.Infrastructure.Domain.Models.Tag", b =>
                {
                    b.Property<Guid?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ID");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            ID = new Guid("810203f8-e1c2-45f1-b411-f6f97d00ce01"),
                            CreatedAt = new DateTime(2021, 5, 28, 10, 39, 18, 602, DateTimeKind.Utc).AddTicks(2592),
                            Name = "Tag 1",
                            UpdatedAt = new DateTime(2021, 5, 28, 10, 39, 18, 602, DateTimeKind.Utc).AddTicks(3041)
                        },
                        new
                        {
                            ID = new Guid("810203f8-e1c2-45f1-b411-f6f97d00ce02"),
                            CreatedAt = new DateTime(2021, 5, 28, 10, 39, 18, 603, DateTimeKind.Utc).AddTicks(655),
                            Name = "Tag 2",
                            UpdatedAt = new DateTime(2021, 5, 28, 10, 39, 18, 603, DateTimeKind.Utc).AddTicks(676)
                        },
                        new
                        {
                            ID = new Guid("810203f8-e1c2-45f1-b411-f6f97d00ce03"),
                            CreatedAt = new DateTime(2021, 5, 28, 10, 39, 18, 603, DateTimeKind.Utc).AddTicks(718),
                            Name = "Tag 3",
                            UpdatedAt = new DateTime(2021, 5, 28, 10, 39, 18, 603, DateTimeKind.Utc).AddTicks(719)
                        });
                });

            modelBuilder.Entity("RenielDavidInventorySystem.Infrastructure.Domain.Models.User", b =>
                {
                    b.Property<Guid?>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Password")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RenielDavidInventorySystem.Infrastructure.Domain.Models.ProductTag", b =>
                {
                    b.HasOne("RenielDavidInventorySystem.Infrastructure.Domain.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID");

                    b.HasOne("RenielDavidInventorySystem.Infrastructure.Domain.Models.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId");
                });
#pragma warning restore 612, 618
        }
    }
}
